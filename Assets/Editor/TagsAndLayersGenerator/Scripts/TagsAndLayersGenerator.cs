using System;
using System.Text;
using System.IO;

using UnityEngine;
using UnityEditor;

public class TagsAndLayersGenerator : MonoBehaviour
{
    [MenuItem("zer0/Widgets/TagsAndLayersGenerator/Generate Tags")]
    public static void GenerateTags()
    {
        DateTime now = DateTime.Now;
        StringBuilder tagClass = new StringBuilder();
        tagClass.AppendLine("public static class Tags {");
        foreach (string tag in UnityEditorInternal.InternalEditorUtility.tags)
        {
            tagClass.AppendLine("\tpublic const string " + tag.Replace(" ", "") + " = \"" + tag + "\";");
        }
        tagClass.AppendLine("}");

        string path = EditorUtility.SaveFilePanel("Select a file", "Assets/Editor/TagsAndLayerGenerator/Scripts", "Tags", "cs");
        if (!string.IsNullOrEmpty(path))
        {
            using (StreamWriter writer = new StreamWriter(path))
            {
                writer.WriteLine("// Auto generated by TagsAndLayersGenerator.cs");
                writer.WriteLine("// Created at " + now + "\n\n\n");
                writer.Write(tagClass.ToString());
            }
            AssetDatabase.Refresh();
            Debug.Log("Tags have been generated.");
        }
    }

    [MenuItem("zer0/Widgets/TagsAndLayersGenerator/Generate Layers")]
    public static void GenerateLayers()
    {
        DateTime now = DateTime.Now;
        StringBuilder layerClass = new StringBuilder();
        layerClass.AppendLine("public static class Layers {");
        foreach (string layer in UnityEditorInternal.InternalEditorUtility.layers)
        {
            layerClass.AppendLine("\tpublic const string " + layer.Replace(" ", "") + " = \"" + layer + "\";");
        }
        layerClass.AppendLine("}");

        string path = EditorUtility.SaveFilePanel("Select a file", "Assets/Editor/TagsAndLayerGenerator/Scripts", "Layers", "cs");
        using (StreamWriter writer = new StreamWriter(path))
        {
            writer.WriteLine("// Auto generated by TagsAndLayersGenerator.cs");
            writer.WriteLine("// Created at " + now + "\n\n\n");
            writer.Write(layerClass.ToString());
        }
        AssetDatabase.Refresh();
        Debug.Log("Layers have been generated.");
    }

    [MenuItem("zer0/Widgets/TagsAndLayersGenerator/Generate Both")]
    public static void GenerateBoth()
    {
        GenerateTags();
        GenerateLayers();
    }
}
